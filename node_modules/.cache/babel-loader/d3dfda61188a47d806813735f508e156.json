{"ast":null,"code":"import _classCallCheck from \"/Users/Emma/Desktop/JS Projects/anadillo-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Emma/Desktop/JS Projects/anadillo-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Emma/Desktop/JS Projects/anadillo-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Emma/Desktop/JS Projects/anadillo-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Emma/Desktop/JS Projects/anadillo-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Emma/Desktop/JS Projects/anadillo-react/src/components/search/Search.js\";\nimport React, { Component } from 'react';\nimport GalleryCont from './GalleryCont'; //import apiKey from '../config.js'\n//Photo endpoint to use https://www.flickr.com/services/api/misc.urls.html\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this));\n    _this.searchInput = React.createRef();\n\n    _this.galleryFetch = function () {\n      var search = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"dogs\";\n      fetch(\"https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=672ad18dd0d9678d40e576638b02ab93&tags=\".concat(search, \"&format=json&nojsoncallback=1\")).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        _this.setState({\n          images: responseData.photos\n        });\n      }).catch(function (error) {\n        console.log('Error fetching and parsing data', error);\n      });\n    };\n\n    _this.submitSearch = function (submit) {\n      submit.preventDefault();\n\n      _this.galleryFetch(_this.searchInput.current.value); // console.log(this.searchInput.current.value);\n\n\n      _this.setState({\n        searchTag: _this.searchInput.current.value\n      });\n\n      submit.currentTarget.reset();\n    };\n\n    _this.state = {\n      images: {},\n      searchTag: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.galleryFetch();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"searchDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"searchHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: this.searchInput,\n        placeholder: \"Enter a search word\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), Object.keys(this.state.images).length > 0 && React.createElement(GalleryCont, {\n        imageArray: this.state.images,\n        searchTag: this.state.searchTag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/Emma/Desktop/JS Projects/anadillo-react/src/components/search/Search.js"],"names":["React","Component","GalleryCont","Search","searchInput","createRef","galleryFetch","search","fetch","then","response","json","responseData","setState","images","photos","catch","error","console","log","submitSearch","submit","preventDefault","current","value","searchTag","currentTarget","reset","state","Object","keys","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;AAKA;;IAEMC,M;;;;;AAEJ,oBAAc;AAAA;;AAAA;;AACZ;AADY,UAQdC,WARc,GAQAJ,KAAK,CAACK,SAAN,EARA;;AAAA,UAUdC,YAVc,GAUE,YAAqB;AAAA,UAApBC,MAAoB,uEAAX,MAAW;AACjCC,MAAAA,KAAK,2HAAoHD,MAApH,mCAAL,CACCE,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAG,YAAY,EACnB;AACE,cAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,YAAY,CAACG;AADT,SAAd;AAGD,OAPA,EAQAC,KARA,CAQM,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA8CF,KAA9C;AACD,OAVA;AAWD,KAtBW;;AAAA,UA4BdG,YA5Bc,GA4BC,UAACC,MAAD,EAAY;AAEzBA,MAAAA,MAAM,CAACC,cAAP;;AACA,YAAKhB,YAAL,CAAkB,MAAKF,WAAL,CAAiBmB,OAAjB,CAAyBC,KAA3C,EAHyB,CAI1B;;;AACD,YAAKX,QAAL,CAAc;AACLY,QAAAA,SAAS,EAAE,MAAKrB,WAAL,CAAiBmB,OAAjB,CAAyBC;AAD/B,OAAd;;AAGEH,MAAAA,MAAM,CAACK,aAAP,CAAqBC,KAArB;AAED,KAtCa;;AAEZ,UAAKC,KAAL,GAAa;AACXd,MAAAA,MAAM,EAAE,EADG;AAEXW,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFY;AAMb;;;;wCAkBmB,CAClB;AACD;;;6BAcQ;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,QAAQ,EAAI,KAAKL,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACE,QAAA,IAAI,EAAE,MADR;AAEE,QAAA,GAAG,EAAI,KAAKhB,WAFd;AAGE,QAAA,WAAW,EAAG,qBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAMA;AACE,QAAA,IAAI,EAAG,QADT;AAEE,QAAA,KAAK,EAAG,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,CADA,EAaCyB,MAAM,CAACC,IAAP,CAAY,KAAKF,KAAL,CAAWd,MAAvB,EAA+BiB,MAA/B,GAAwC,CAAxC,IACC,oBAAC,WAAD;AACE,QAAA,UAAU,EAAI,KAAKH,KAAL,CAAWd,MAD3B;AAEE,QAAA,SAAS,EAAI,KAAKc,KAAL,CAAWH,SAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF,CADF;AAwBD;;;;EArEkBxB,S;;AAwErB,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport GalleryCont from './GalleryCont'\n//import apiKey from '../config.js'\n\n\n\n\n//Photo endpoint to use https://www.flickr.com/services/api/misc.urls.html\n\nclass Search extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      images: {},\n      searchTag: \"\"\n    };\n  }\n\n  searchInput = React.createRef();\n\n  galleryFetch  = (search = \"dogs\") => {\n      fetch(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=672ad18dd0d9678d40e576638b02ab93&tags=${search}&format=json&nojsoncallback=1`)\n      .then(response => response.json())\n      .then(responseData =>\n     {\n       this.setState({\n         images: responseData.photos\n       });\n     })\n     .catch(error => {\n       console.log('Error fetching and parsing data',error);\n     });\n    }\n\n  componentDidMount() {\n    // this.galleryFetch();\n  }\n\n  submitSearch = (submit) => {\n\n    submit.preventDefault();\n    this.galleryFetch(this.searchInput.current.value);\n   // console.log(this.searchInput.current.value);\n  this.setState({\n           searchTag: this.searchInput.current.value\n  });\n    submit.currentTarget.reset();\n\n  }\n\n  render() {\n\n\n    return (\n      <div className=\"searchDiv\">\n        <header className=\"searchHeader\">\n        <form onSubmit = {this.submitSearch}>\n        <input\n          type =\"text\"\n          ref = {this.searchInput}\n          placeholder = \"Enter a search word\"\n        />\n        <input\n          type = \"submit\"\n          value = \"Search\"\n        />\n\n        </form>\n        {Object.keys(this.state.images).length > 0 && (\n          <GalleryCont\n            imageArray = {this.state.images}\n            searchTag = {this.state.searchTag}\n          />\n        )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/Emma/Desktop/JS Projects/anadillo-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Emma/Desktop/JS Projects/anadillo-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Emma/Desktop/JS Projects/anadillo-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Emma/Desktop/JS Projects/anadillo-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Emma/Desktop/JS Projects/anadillo-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Emma/Desktop/JS Projects/anadillo-react/src/components/counter/Stopwatch.js\";\nimport React, { Component } from 'react';\n\nvar Stopwatch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Stopwatch, _Component);\n\n  function Stopwatch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Stopwatch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Stopwatch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isRunning: false,\n      elapsedTime: 0,\n      previoustime: 0\n    };\n\n    _this.tick = function () {\n      if (_this.state.isRunning) {\n        var now = Date.now();\n\n        _this.setState(function (prevState) {\n          return {\n            previousTime: now,\n            elapsedTime: prevState.elapsedTime + (now - prevState.previousTime)\n          };\n        });\n      }\n    };\n\n    _this.handleStopwatch = function () {\n      _this.setState(function (prevState) {\n        return {\n          isRunning: !prevState.isRunning\n        };\n      });\n\n      if (!_this.state.isRunning) {\n        _this.setState({\n          previousTime: Date.now()\n        });\n      }\n    };\n\n    _this.handleResetTime = function () {\n      _this.setState(function (prevState) {\n        return {\n          elapsedTime: 0\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Stopwatch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.intervalID = setInterval(function () {\n        return _this2.tick();\n      }, 100);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.intervalID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"stopwatch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Stopwatch\"), React.createElement(\"span\", {\n        className: \"stopwatch-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" \", Math.floor(this.state.elapsedTime / 1000), \" \"), React.createElement(\"button\", {\n        onClick: this.handleStopwatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.isRunning ? 'Stop' : 'Start '), React.createElement(\"button\", {\n        onClick: this.handleResetTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" Reset \"));\n    }\n  }]);\n\n  return Stopwatch;\n}(Component);\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/Emma/Desktop/JS Projects/anadillo-react/src/components/counter/Stopwatch.js"],"names":["React","Component","Stopwatch","state","isRunning","elapsedTime","previoustime","tick","now","Date","setState","prevState","previousTime","handleStopwatch","handleResetTime","intervalID","setInterval","clearInterval","Math","floor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,S;;;;;;;;;;;;;;;;;UAEJC,K,GAAO;AACLC,MAAAA,SAAS,EAAE,KADN;AAELC,MAAAA,WAAW,EAAE,CAFR;AAGLC,MAAAA,YAAY,EAAE;AAHT,K;;UAeTC,I,GAAO,YAAK;AACV,UAAI,MAAKJ,KAAL,CAAWC,SAAf,EAAyB;AACvB,YAAMI,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;;AACA,cAAKE,QAAL,CAAe,UAAAC,SAAS;AAAA,iBAAK;AAC3BC,YAAAA,YAAY,EAAEJ,GADa;AAE3BH,YAAAA,WAAW,EAAEM,SAAS,CAACN,WAAV,IAAyBG,GAAG,GAAGG,SAAS,CAACC,YAAzC;AAFc,WAAL;AAAA,SAAxB;AAID;AACF,K;;UAECC,e,GAAkB,YAAM;AACtB,YAAKH,QAAL,CAAe,UAAAC,SAAS;AAAA,eAAK;AAC3BP,UAAAA,SAAS,EAAE,CAACO,SAAS,CAACP;AADK,SAAL;AAAA,OAAxB;;AAGA,UAAI,CAAC,MAAKD,KAAL,CAAWC,SAAhB,EAA0B;AACvB,cAAKM,QAAL,CAAc;AACXE,UAAAA,YAAY,EAAEH,IAAI,CAACD,GAAL;AADH,SAAd;AAGF;AACF,K;;UAGDM,e,GAAiB,YAAM;AACrB,YAAKJ,QAAL,CAAe,UAAAC,SAAS;AAAA,eAAK;AAC3BN,UAAAA,WAAW,EAAE;AADc,SAAL;AAAA,OAAxB;AAID,K;;;;;;;wCAnCgB;AAAA;;AACjB,WAAKU,UAAL,GAAkBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACT,IAAL,EAAN;AAAA,OAAD,EAAoB,GAApB,CAA7B;AACD;;;2CAEqB;AACpBU,MAAAA,aAAa,CAAC,KAAKF,UAAN,CAAb;AACD;;;6BAkCU;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAM,QAAA,SAAS,EAAE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAqCG,IAAI,CAACC,KAAL,CAAW,KAAKhB,KAAL,CAAWE,WAAX,GAAuB,IAAlC,CAArC,MAFF,EAGE;AAAQ,QAAA,OAAO,EAAI,KAAKQ,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAKV,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC,QAFjC,CAHF,EAOE;AAAQ,QAAA,OAAO,EAAI,KAAKU,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CADF;AAWD;;;;EA7DqBb,S;;AAgExB,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass Stopwatch extends Component {\n\n  state ={\n    isRunning: false,\n    elapsedTime: 0,\n    previoustime: 0\n  };\n\n\ncomponentDidMount(){\n  this.intervalID = setInterval(() => this.tick() ,100);\n}\n\ncomponentWillUnmount(){\n  clearInterval(this.intervalID);\n}\n\ntick = () =>{\n  if (this.state.isRunning){\n    const now = Date.now();\n    this.setState( prevState => ({\n      previousTime: now,\n      elapsedTime: prevState.elapsedTime + (now - prevState.previousTime)\n    }));\n  }\n}\n\n  handleStopwatch = () => {\n    this.setState( prevState => ({\n      isRunning: !prevState.isRunning\n    }));\n    if (!this.state.isRunning){\n       this.setState({\n          previousTime: Date.now()\n       });\n    }\n  }\n\n\n  handleResetTime =() => {\n    this.setState( prevState => ({\n      elapsedTime: 0,\n\n    }));\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className =\"stopwatch-time\"> { Math.floor(this.state.elapsedTime/1000)} </span>\n        <button onClick = {this.handleStopwatch}>\n        {/*Ternary operator, if isRunning is true, Stop if not Start*/}\n        {this.state.isRunning ? 'Stop' : 'Start '}\n        </button>\n        <button onClick = {this.handleResetTime}> Reset </button>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}